{"ast":null,"code":"var _jsxFileName = \"/home/tomasz/Desktop/Work/Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors'; // import { selectCurrentUser } from '../../redux/user/user.selector';\n\nimport { createStructuredSelector } from 'reselect';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOveriviewWithSpinner = WithSpinner(CollectionOverview);\n_c = CollectionsOveriviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOveriviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOveriviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/tomasz/Desktop/Work/Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","createStructuredSelector","CollectionOverview","CollectionPage","WithSpinner","CollectionsOveriviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C,C,CACA;;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,+BAA+B,GAAGD,WAAW,CAACF,kBAAD,CAAnD;KAAMG,+B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;MAAMG,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACV,MAAAA;AAAD,QAA+B,KAAKW,KAA1C;AAEAX,IAAAA,0BAA0B;AAC7B;;AAGDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgC,KAAKH,KAA3C;AAEA,wBACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAEJ,KAAK,iBAC7C,QAAC,+BAAD;AAAiC,UAAA,SAAS,EAAEG,oBAA5C;AAAA,aAAsEH;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAEJ,KAAK,iBACrD,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,oBAAtC;AAAA,aAAgEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAYH;;AAvBkC;;AA0BvC,MAAMK,kBAAkB,GAAGC,QAAQ,KAAI;AACnCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADP,CAAJ,CAAnC;;AAIA,MAAMkB,eAAe,GAAGhB,wBAAwB,CAAC;AAC7CY,EAAAA,oBAAoB,EAAEb;AADuB,CAAD,CAAhD;AAIA,eAAeF,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; \n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n// import { selectCurrentUser } from '../../redux/user/user.selector';\n\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOveriviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n    componentDidMount(){\n        const {fetchCollectionsStartAsync} = this.props;\n\n        fetchCollectionsStartAsync();\n    }\n\n\n    render() {\n        const {match, isCollectionFetching} = this.props;\n\n        return (\n                <div className='shop-page'>\n                    <Route exact path={`${match.path}`} render={props => (\n                        <CollectionsOveriviewWithSpinner isLoading={isCollectionFetching} {...props} />)\n                } \n                    />\n                    <Route path={`${match.path}/:collectionId`} render={props => (\n                        <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />)\n                } \n                    />\n                </div>\n            )\n    }\n}  \n\nconst mapDispatchToProps = dispatch =>({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}