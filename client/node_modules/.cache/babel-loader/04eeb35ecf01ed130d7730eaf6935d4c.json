{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyD_AI__DAWnxG_6fNtABbWB1e1fcYQZp_M\",\n  authDomain: \"crwn-db-388d7.firebaseapp.com\",\n  projectId: \"crwn-db-388d7\",\n  storageBucket: \"crwn-db-388d7.appspot.com\",\n  messagingSenderId: \"854637040362\",\n  appId: \"1:854637040362:web:db382d1e2276c612ecbd93\",\n  measurementId: \"G-W85PG68P0B\"\n};\nexport const createUserProfileDocument = async (userAuth, aditionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...aditionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const convertedCollection = collections.doc.map(doc => {\n    const {\n      title,\n      item\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      item\n    };\n  });\n  console.log(convertedCollection);\n};\nexport const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //INITIALIZE GOOGLE LOGIN\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/tomasz/Desktop/Work/Projects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","aditionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","convertCollectionsSnapshotToMap","collections","convertedCollection","map","title","item","data","routeName","encodeURI","toLowerCase","id","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyD_AI__DAWnxG_6fNtABbWB1e1fcYQZp_M\",\n    authDomain: \"crwn-db-388d7.firebaseapp.com\",\n    projectId: \"crwn-db-388d7\",\n    storageBucket: \"crwn-db-388d7.appspot.com\",\n    messagingSenderId: \"854637040362\",\n    appId: \"1:854637040362:web:db382d1e2276c612ecbd93\",\n    measurementId: \"G-W85PG68P0B\"\n  }\n\n  export const createUserProfileDocument = async (userAuth, aditionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists){\n      const {displayName, email} = userAuth;\n      const createdAt = new Date();\n\n      try{\n\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...aditionalData\n        })\n\n      }catch(error){\n        console.log('error creating user', error.message)\n      }\n    }\n\n    return userRef;\n  }\n\n  export const convertCollectionsSnapshotToMap = collections => {\n    const convertedCollection = collections.doc.map(doc => {\n      const {title, item} = doc.data();\n\n      return {\n        routeName: encodeURI(title.toLowerCase()),\n        id: doc.id,\n        title,\n        item\n      };\n    })\n    console.log(convertedCollection);\n  }\n\n  export const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n      const newDocRef = collectionRef.doc(); \n      batch.set(newDocRef, obj);\n    });\n\n    return await batch.commit();\n  };\n\n  firebase.initializeApp(config);\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  //INITIALIZE GOOGLE LOGIN\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt: 'select_account'});\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}