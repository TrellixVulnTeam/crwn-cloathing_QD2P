{"ast":null,"code":"var _jsxFileName = \"/home/tomasz/Desktop/Work/Projects/crwn-clothing/client/src/pages/collection/collection.container.jsx\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!){\n    getCollectionsByTitle(title: $title){\n      id\n      title\n      items{\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({\n  match\n}) => /*#__PURE__*/_jsxDEV(Query, {\n  query: GET_COLLECTION_BY_TITLE,\n  variables: match.params.collectionId,\n  children: ({\n    loading,\n    data: {\n      getCollectionsByTitle\n    }\n  }) => {\n    if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(CollectionPage, {\n      collection: getCollectionsByTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c = CollectionPageContainer;\nexport default CollectionPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageContainer\");","map":{"version":3,"sources":["/home/tomasz/Desktop/Work/Projects/crwn-clothing/client/src/pages/collection/collection.container.jsx"],"names":["React","Query","gql","CollectionPage","Spinner","GET_COLLECTION_BY_TITLE","CollectionPageContainer","match","params","collectionId","loading","data","getCollectionsByTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,4CAApB;;AAEA,MAAMC,uBAAuB,GAAGH,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,MAAMI,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC9B,QAAC,KAAD;AAAO,EAAA,KAAK,EAAEF,uBAAd;AAAuC,EAAA,SAAS,EAAEE,KAAK,CAACC,MAAN,CAAaC,YAA/D;AAAA,YAEI,CAAC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAhB,GAAD,KAA8C;AAC5C,QAAIF,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,wBAAO,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AALL;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMN,uB;AAWN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!){\n    getCollectionsByTitle(title: $title){\n      id\n      title\n      items{\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({ match }) => (\n  <Query query={GET_COLLECTION_BY_TITLE} variables={match.params.collectionId}>\n    {\n      ({loading, data: {getCollectionsByTitle}}) => {\n        if (loading) return <Spinner />\n        return <CollectionPage collection={getCollectionsByTitle} />\n      }\n    }\n  </Query>\n)\n\nexport default CollectionPageContainer;"]},"metadata":{},"sourceType":"module"}